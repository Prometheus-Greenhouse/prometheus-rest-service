spring:
  application:
    name: prometheus-rest
  cloud:
    config:
      server:
        git:
          uri: "https://github.com/Prometheus-Greenhouse/config-repos"
          default-label: master
  profiles:
    active: dev
  config:
    import: optional:configserver:https://localhost:8081/
  datasource:
    driver-class-name: oracle.jdbc.OracleDriver
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.Oracle12cDialect
  kafka:
    properties:
      schema.registry.url: http://127.0.0.1:8081
    bootstrap-servers:
      - 192.168.1.3:9092
    consumer:
      group-id: prometheus
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
database:
  host: 192.168.1.3
  port: 1521
  username: prometheus
  password: 123456
  service: xe
  schema: prometheus
#      hibernate:
#        dialect: org.hibernate.dialect.Oracle9iDialect
#  cloud:
#    config:
#      uri: https://prometheus-config.herokuapp.com
#springdoc:
#  api-docs:
#    path: /api-docs
#  swagger-ui:
#    path: /
#logging:
#  level:
#    org:
#      springframework:
#        boot:
#          autoconfigure: debug
#eureka:
#  client:
#    serviceUrl:
#      defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}
#  instance:
#    preferIpAddress: true
server:
  port: 8000
#  springdoc.api-docs.path=/api-docs
#  springdoc.swagger-ui.path=/
#  logging.level.org.springframework.boot.autoconfigure=debug
broker:
  host: 192.168.1.3
  port: 1883
#
#  debug=true
#  server.port=${PORT:8000}
#  kafka.bootstrapAddress=192.168.1.3:9092
#  spring.kafka.bootstrap-servers=192.168.1.3:9092
#  spring.kafka.consumer.group-id=prometheus